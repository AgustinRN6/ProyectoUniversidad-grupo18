
package Vista;

import Control.AlumnosData;
import Control.InscripcionesData;
import Control.MateriasData;
import Entidades.Alumno;
import Entidades.Inscripcion;
import Entidades.Materia;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;




public class GestionInscripcion extends javax.swing.JInternalFrame {

    private DefaultTableModel tablaMateria = new DefaultTableModel();
    private boolean estado;
    private InscripcionesData inscData = new InscripcionesData();
    private MateriasData matData = new MateriasData();
    private AlumnosData alData = new AlumnosData();

    /**
     * Creates new form GestionInscripcion
     */
    public GestionInscripcion() {
        initComponents();
        columnaInscripciones();
        cargarAlumnos();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoMaterias = new javax.swing.ButtonGroup();
        jPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jbInscribirAlumno = new javax.swing.JButton();
        jbAnularInscripcion = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtMaterias = new javax.swing.JTable();
        jcAlumno = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jrMateriaInscripta = new javax.swing.JRadioButton();
        jrMateriasNOinsc = new javax.swing.JRadioButton();
        txtDatos = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jPanel.setBackground(new java.awt.Color(208, 208, 250));

        jLabel4.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel4.setText("Formulario de Inscripcion");

        jLabel5.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel5.setText("Seleccione el ID del Alumno");

        jLabel6.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        jLabel6.setText("Listado de Materias");

        jbInscribirAlumno.setText("Inscribir");
        jbInscribirAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirAlumnoActionPerformed(evt);
            }
        });

        jbAnularInscripcion.setText("Anular Inscripcion");
        jbAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularInscripcionActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        jtMaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jtMaterias);

        jcAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcAlumnoActionPerformed(evt);
            }
        });

        jSeparator3.setForeground(new java.awt.Color(102, 102, 102));

        jSeparator4.setForeground(new java.awt.Color(102, 102, 102));

        grupoMaterias.add(jrMateriaInscripta);
        jrMateriaInscripta.setText("Materias Inscriptas");
        jrMateriaInscripta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriaInscriptaActionPerformed(evt);
            }
        });

        grupoMaterias.add(jrMateriasNOinsc);
        jrMateriasNOinsc.setText("Materias NO inscriptas");
        jrMateriasNOinsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasNOinscActionPerformed(evt);
            }
        });

        txtDatos.setEditable(false);
        txtDatos.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N

        jLabel7.setText("Datos del alumno");

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel6))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel4))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jrMateriaInscripta)
                        .addGap(79, 79, 79)
                        .addComponent(jrMateriasNOinsc))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jbInscribirAlumno)
                        .addGap(28, 28, 28)
                        .addComponent(jbAnularInscripcion)
                        .addGap(56, 56, 56)
                        .addComponent(jbSalir))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator3)
                            .addComponent(jLabel7)
                            .addComponent(txtDatos, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addGap(8, 8, 8)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrMateriaInscripta)
                    .addComponent(jrMateriasNOinsc))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbInscribirAlumno)
                    .addComponent(jbAnularInscripcion)
                    .addComponent(jbSalir))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Se agrega las columnas con sus nombres correspondientes a la tabla
    private void columnaInscripciones() {
        tablaMateria.addColumn("ID Materia");
        tablaMateria.addColumn("Nombre");
        tablaMateria.addColumn("Año");
        jtMaterias.setModel(tablaMateria);
        
    }
    //METODO QUE BORRA LAS FILAS DE LA TABLA
    private void borrarFilaTabla() {
        int indice = tablaMateria.getRowCount();
        for (int i = indice; i > 0; i--) {
            tablaMateria.removeRow(0);
        }
        
    }
    //METODO QUE CARGA LA TABLA CON LAS MATERIAS PARA INSCRIBIRSE
    private void cargarDatosNoInscriptas(int id) {
            borrarFilaTabla();
            for (Materia m : inscData.obtenerMateriasNOCursadas(id)) {
                tablaMateria.addRow(new Object[]{m.getId_materia(), m.getNombre(), m.getAño()});
            }
        
    }
    //METODO QUE CARGA LA TABLA PARA LAS MATERIAS YA INSCRIPTAS
    private void cargarDatosInscriptas(int id) {
            borrarFilaTabla();
            for (Materia m :inscData.obtenerMateriasCursadas(id)) {
                tablaMateria.addRow(new Object[]{m.getId_materia(), m.getNombre(), m.getAño()});
            }
    }
    //METODO QUE CARGAR  EL ID LOS ALUMNOS AL JCOMBOBOX 
    private void cargarAlumnos() {
        Iterator<Alumno> iterar = alData.mostrarAlumnos().iterator();
        while(iterar.hasNext()) {
            Alumno a = iterar.next();
            if (a.isEstado()) {
                jcAlumno.addItem(a.getId());
            }
            
        }
    }

    private void jbInscribirAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirAlumnoActionPerformed
        // TODO add your handling code here:
        if(estado == true){
            JOptionPane.showMessageDialog(null, "No puede inscribir, esta en la pestaña incorrecta");
        }else{
        int filaSeleccionada = jtMaterias.getSelectedRow();
        int id = Integer.parseInt(jcAlumno.getSelectedItem().toString());
        if (filaSeleccionada != -1) {
            
            Alumno a = alData.buscarAlumno(id);
            int idMateria = (Integer) tablaMateria.getValueAt(filaSeleccionada, 0);
            Materia m = matData.consultarMateria(idMateria);
            
            Inscripcion i = new Inscripcion(0,a,m);
            inscData.cargarInscripion(i);
        }
        cargarDatosNoInscriptas(id);
        }
    }//GEN-LAST:event_jbInscribirAlumnoActionPerformed

    private void jbAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularInscripcionActionPerformed
        // TODO add your handling code here:
        if(estado == false){
            JOptionPane.showMessageDialog(null, "No puede anular, esta en la pestaña incorrecta");
        } else{
        
        int filaSeleccionada = jtMaterias.getSelectedRow();
        int id = Integer.parseInt(jcAlumno.getSelectedItem().toString());
        
        if (filaSeleccionada != -1) {
            Alumno a = alData.buscarAlumno(id);
            int idMateria = (Integer) tablaMateria.getValueAt(filaSeleccionada, 0);
            inscData.borrarInscripcionMateriaAlumno(a.getId(), idMateria);
        }
        cargarDatosInscriptas(id);
        }
    }//GEN-LAST:event_jbAnularInscripcionActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jrMateriaInscriptaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriaInscriptaActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jcAlumno.getSelectedItem().toString());
        cargarDatosInscriptas(id);
        estado = true;
    }//GEN-LAST:event_jrMateriaInscriptaActionPerformed

    private void jrMateriasNOinscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasNOinscActionPerformed
        // TODO add your handling code here:
        int id = Integer.parseInt(jcAlumno.getSelectedItem().toString());
        cargarDatosNoInscriptas(id);
        estado = false;
    }//GEN-LAST:event_jrMateriasNOinscActionPerformed

    private void jcAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcAlumnoActionPerformed
        // TODO add your handling code here:}
        int id = Integer.parseInt(jcAlumno.getSelectedItem().toString());
        verDatos(id);
        grupoMaterias.clearSelection();
        borrarFilaTabla();
    }//GEN-LAST:event_jcAlumnoActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grupoMaterias;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JButton jbAnularInscripcion;
    private javax.swing.JButton jbInscribirAlumno;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Integer> jcAlumno;
    private javax.swing.JRadioButton jrMateriaInscripta;
    private javax.swing.JRadioButton jrMateriasNOinsc;
    private javax.swing.JTable jtMaterias;
    private javax.swing.JTextField txtDatos;
    // End of variables declaration//GEN-END:variables
private void verDatos(int id){
    Alumno a  = alData.buscarAlumno(id);
    txtDatos.setText("Nombre y apellido: "+a.getNombre()+" "+ a.getApellido()+", DNI: "+ a.getDni());
}

}
